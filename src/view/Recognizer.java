/*
 * Todos os direitos reservados ao autor pedro_ha@yahoo.com.br
 * Este programa deve ser distribuido junto à sua licença
 * 
 * Aviso: 
 * Este programa de computador é protegido por leis de direitos autorais.
 * Qualquer reprodução, distribuição ou modificação não autorizada deste
 * programa de computador, em sua totalidade ou parcial, resultará em
 * severas punições civis e criminais, e os infratores serão punidos sob a
 * máxima extensão possível dentro da lei. 
 * Este programa de computador é distribuído sem nenhuma garantia
 * implícita ou explicita, em nenhum caso o licenciante será responsável
 * por quaisquer danos diretos, indiretos, incidental, incluindo, mas não 
 * limitado, a perda de uso, dados, lucros ou interrupções de negócios.
 */
package view;

import com.gtranslate.Audio;
import com.gtranslate.Language;
import controller.RecognizerController;
import controller.RegistroController;
import controller.WebCamController;
import entity.Funcionario;
import entity.Registro;
import java.awt.Dialog;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.InputStream;
import java.util.Date;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JFrame;
import javax.swing.UIManager;
import model.CaptionUtils;

/**
 *
 * @author pedro_ha@yahoo.com.br
 */
public class Recognizer extends JFrame {

    /**
     * Creates new form Recognizer
     */
    public Recognizer() throws Exception {
        initComponents();
        this.setVisible(true);
        initWebCam();
        centralizar();        
    }
    
    private void centralizar() throws HeadlessException {
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        int x = (int) toolkit.getScreenSize().getWidth() / 2 - getWidth() / 2;
        int y = (int) toolkit.getScreenSize().getHeight()/ 2 - getHeight() / 2;
        setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        outputContainer = new JPanel();
        outputPanel = new BackgroudedPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusTraversalPolicyProvider(true);
        setIconImages(IconUtils.getIcons());
        setMinimumSize(new java.awt.Dimension(747, 343));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                focusGained(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                onClosing(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        outputContainer.setBorder(javax.swing.BorderFactory.createTitledBorder(null, CAPTIONS.getString("TITLE"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        outputContainer.setPreferredSize(new java.awt.Dimension(352, 319));
        outputContainer.setRequestFocusEnabled(false);

        outputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        outputPanel.setPreferredSize(new java.awt.Dimension(320, 240));

        javax.swing.GroupLayout outputPanelLayout = new javax.swing.GroupLayout(outputPanel);
        outputPanel.setLayout(outputPanelLayout);
        outputPanelLayout.setHorizontalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 693, Short.MAX_VALUE)
        );
        outputPanelLayout.setVerticalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 434, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout outputContainerLayout = new javax.swing.GroupLayout(outputContainer);
        outputContainer.setLayout(outputContainerLayout);
        outputContainerLayout.setHorizontalGroup(
            outputContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outputContainerLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(outputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
                .addContainerGap())
        );
        outputContainerLayout.setVerticalGroup(
            outputContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, outputContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(outputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText(CAPTIONS.getString("CODE"));

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(IconUtils.getIcon("off"));
        jMenuItem1.setText(CAPTIONS.getString("EXIT"));
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText(CAPTIONS.getString("WORKERS"));

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(IconUtils.getIcon("cadastro"));
        jMenuItem2.setText(CAPTIONS.getString("SIGNUP"));
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(IconUtils.getIcon("funcionarios"));
        jMenuItem3.setText(CAPTIONS.getString("LIST"));
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        jMenu3.setText(CAPTIONS.getString("CHECKIN"));

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setIcon(IconUtils.getIcon("registros"));
        jMenuItem4.setText(CAPTIONS.getString("CHECKINLIST"));
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(outputContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_onClosing
        exit();
    }//GEN-LAST:event_onClosing

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        webCamController.stopWebCam();
        cadastraFuncionario.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void focusGained(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_focusGained
        if (!webCamController.isRunning()) {
            initWebCam();
        }
    }//GEN-LAST:event_focusGained

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        if(webCamController.isRunning()){
            webCamController.stopWebCam();
        }
        if(listagemRegistros == null){
            listagemRegistros = new ListagemRegistros(this, Dialog.ModalityType.DOCUMENT_MODAL);
        }
        listagemRegistros.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if (webCamController.isRunning()) {
            webCamController.stopWebCam();
        }
        if(listagemFuncionario == null){
            listagemFuncionario = new ListagemFuncionario(this, Dialog.ModalityType.DOCUMENT_MODAL);
        }
        listagemFuncionario.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        exit();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void updateImagePanel(BufferedImage image, JPanel panel) {
        ((BackgroudedPanel) panel).updateBackground(image);
    }

    private void initWebCam() {
        webCamController.initWebCam(realTime);
    }
    
    private void exit(){
        webCamController.shutDownWebCam();
        System.exit(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Recognizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Recognizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Recognizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Recognizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Recognizer();
                } catch (Exception ex) {
                    Logger.getLogger(Recognizer.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    private WebCamController webCamController = new WebCamController();
    private RecognizerController recognizerController = new RecognizerController();
    private RegistroController registroController = new RegistroController();
    private CadastraFuncionario cadastraFuncionario = new CadastraFuncionario(this, JDialog.ModalityType.APPLICATION_MODAL);
    private ListagemFuncionario listagemFuncionario;
    private ListagemRegistros listagemRegistros;
    private Date lastRecognized = new Date();
    private Funcionario funcionario;
    private Registro registro;
    
    private Runnable playSound = new Runnable() {
        @Override
        public void run() {
            Audio audio = Audio.getInstance();
            InputStream sound;
            try {
                sound = audio.getAudio(registro.getTipo()
                        + funcionario.getNome(), Language.PORTUGUESE);
                audio.play(sound);
            } catch (Exception ex) {
                System.err.println(ex.getMessage());
            }
        }
    };
    
    private Runnable realTime = new Runnable() {
        @Override
        public void run() {
            if(verifyTime())return;
            recognize();
            if (funcionario != null) {
                Registro ultimoRegistro = registroController.getLast(funcionario);
                Registro.TipoRegistro tipo = ultimoRegistro != null ? ultimoRegistro.getTipo().getNext() : Registro.TipoRegistro.ENTRADA;
                registro = new Registro(funcionario, new Date(), tipo);
                registroController.save(registro);
                updateView();
            }
        }

        private boolean verifyTime() {
            if (lastRecognized.getTime() > new Date().getTime() - 5000) {
                return true;
            }
            return false;
        }

        private void recognize() {
            Object face = recognizerController.getBiggestFace(
                    webCamController.getSelectedImage());
            funcionario = (Funcionario) recognizerController.recognize(face);
            BufferedImage image = recognizerController.highLightFace(
                    webCamController.getSelectedImage());
            updateImagePanel(image, outputPanel);
        }

        private void updateView() {
            lastRecognized = new Date();
            
            Thread thread = new Thread(playSound);
            thread.start();
            Comprovante.mostrarRegistro(registro);
            
            
        }
    };

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel outputContainer;
    private javax.swing.JPanel outputPanel;
    // End of variables declaration//GEN-END:variables
    private static CaptionUtils CAPTIONS;
}